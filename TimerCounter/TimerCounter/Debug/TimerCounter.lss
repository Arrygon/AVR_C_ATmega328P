
TimerCounter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000162  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000ee  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  00000162  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000162  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000194  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000001d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006a9  00000000  00000000  000001fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000628  00000000  00000000  000008a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000021f  00000000  00000000  00000ecd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000048  00000000  00000000  000010ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000358  00000000  00000000  00001134  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000049  00000000  00000000  0000148c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  000014d5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__vector_14>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a1 30       	cpi	r26, 0x01	; 1
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 75 00 	jmp	0xea	; 0xea <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:

volatile uint8_t counter = 0;

int main(void){
	
	DDRB |= _BV(5);
  90:	25 9a       	sbi	0x04, 5	; 4
	
	TCCR0A |= _BV(WGM01) ;
  92:	84 b5       	in	r24, 0x24	; 36
  94:	82 60       	ori	r24, 0x02	; 2
  96:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= _BV(CS00) | _BV(CS02);
  98:	85 b5       	in	r24, 0x25	; 37
  9a:	85 60       	ori	r24, 0x05	; 5
  9c:	85 bd       	out	0x25, r24	; 37
	TIMSK0 |= _BV(OCIE0A);
  9e:	ee e6       	ldi	r30, 0x6E	; 110
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	80 81       	ld	r24, Z
  a4:	82 60       	ori	r24, 0x02	; 2
  a6:	80 83       	st	Z, r24
	
	OCR0A = 155;
  a8:	8b e9       	ldi	r24, 0x9B	; 155
  aa:	87 bd       	out	0x27, r24	; 39
	
	sei();
  ac:	78 94       	sei
  ae:	ff cf       	rjmp	.-2      	; 0xae <main+0x1e>

000000b0 <__vector_14>:

	while (1){}
}
ISR(TIMER0_COMPA_vect){
  b0:	1f 92       	push	r1
  b2:	0f 92       	push	r0
  b4:	0f b6       	in	r0, 0x3f	; 63
  b6:	0f 92       	push	r0
  b8:	11 24       	eor	r1, r1
  ba:	8f 93       	push	r24
  bc:	9f 93       	push	r25
	counter++;
  be:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  c2:	8f 5f       	subi	r24, 0xFF	; 255
  c4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	if(counter == 100){
  c8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  cc:	84 36       	cpi	r24, 0x64	; 100
  ce:	31 f4       	brne	.+12     	; 0xdc <__vector_14+0x2c>
		PORTB ^= _BV(5);
  d0:	95 b1       	in	r25, 0x05	; 5
  d2:	80 e2       	ldi	r24, 0x20	; 32
  d4:	89 27       	eor	r24, r25
  d6:	85 b9       	out	0x05, r24	; 5
		counter = 0;
  d8:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
	}	
  dc:	9f 91       	pop	r25
  de:	8f 91       	pop	r24
  e0:	0f 90       	pop	r0
  e2:	0f be       	out	0x3f, r0	; 63
  e4:	0f 90       	pop	r0
  e6:	1f 90       	pop	r1
  e8:	18 95       	reti

000000ea <_exit>:
  ea:	f8 94       	cli

000000ec <__stop_program>:
  ec:	ff cf       	rjmp	.-2      	; 0xec <__stop_program>
